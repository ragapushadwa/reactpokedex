{"version":3,"sources":["Nav.js","components/PokemonList.js","components/Pagination.js","useLocalState.js","pages/MyPokemonList.js","pages/WildPokemonList.js","components/PokemonMoves.js","components/PokemonTypes.js","pages/WildPokemonDetail.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Content","Footer","Nav","style","backgroundColor","position","zIndex","width","mode","defaultSelectedKeys","lineHeight","Item","key","to","type","Meta","Card","PokemonList","pokemon","caughtPokemon","console","log","map","p","urlx","url","split","name","hoverable","cover","alt","src","title","description","status","extra","Pagination","goToNextPage","goToPrevPage","onClick","useLocalState","localItem","useState","localStorage","getItem","loc","setState","newItem","setItem","MyPokemonList","setPokemon","loading","setLoading","useEffect","JSON","parse","className","justify","align","WildPokemonList","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","cancel","axios","get","cancelToken","CancelToken","c","then","res","data","next","previous","results","PokemonMoves","moves","size","bordered","dataSource","renderItem","item","move","PokemonTypes","types","WildPokemonDetail","match","hasCaught","setPokemonDex","pokemonTypes","setPokemonTypes","pokemonMoves","setPokemonMoves","loading2","setLoading2","setName","visible","setVisible","confirmLoading","setConfirmLoading","setCaughtPokemon","fetchItem","params","id","imgPath","successPokemonModal","failedPokemonModal","Modal","error","content","TabPane","Tabs","sprites","spinning","xs","sm","md","lg","xl","autoplay","flex","label","height","weight","setTimeout","prob","Math","random","state","filter","length","sort","a","b","catchPokemon","onOk","stringify","onCancel","message","showIcon","onSubmit","alert","prefix","color","placeholder","defaultActiveKey","renderTabBar","props","DefaultTabBar","bottomOffset","background","tab","App","padding","marginTop","minHeight","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a87c8353.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu, Icon, Layout, Breadcrumb } from 'antd';\r\nimport Title from 'antd/lib/skeleton/Title';\r\n\r\n// const { SubMenu } = Menu;\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nfunction Nav() {\r\n    const navStyle = {\r\n        color: 'white'\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        console.log('click ', e);\r\n        this.setState({\r\n            current: e.key,\r\n        });\r\n    };\r\n\r\n    return (\r\n        // <nav>\r\n        //     <h1>Logo</h1>\r\n        //     <ul className=\"nav-links\">\r\n        //         <Link style={navStyle} to=\"/wild-pokemon-list\">\r\n        //             <li >List</li>\r\n        //         </Link>\r\n        //         <Link style={navStyle} to=\"/my-pokemon-list\">\r\n        //             <li>My List</li>\r\n        //         </Link>\r\n        //     </ul>\r\n        // </nav>\r\n\r\n        <Header style={{  backgroundColor:'#91d5ff', position: 'fixed', zIndex: 1, width: '100%' }}>\r\n            {/* <div className=\"logo\" /> */}\r\n            {/* <Title level={3}>PokeNyamm</Title> */}\r\n            \r\n            <Menu\r\n                // theme=\"dark\"\r\n                mode=\"horizontal\"\r\n                defaultSelectedKeys={['all']}\r\n                style={{ lineHeight: '64px', backgroundColor:'#91d5ff' }}\r\n                mode=\"horizontal\"\r\n            // onClick={handleClick}\r\n            // selectedKeys={[this.state.current]}\r\n            >\r\n                <Menu.Item key=\"all\">\r\n                    <Link to=\"/reactpokedex/wild-pokemon-list\">\r\n                        <Icon type=\"appstore\" />\r\n                        All\r\n                </Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"dor\">\r\n                    <Link to=\"/reactpokedex/my-pokemon-list\">\r\n                        <Icon type=\"mail\" />\r\n                       My Pokemon\r\n                </Link>\r\n                </Menu.Item>\r\n\r\n                {/* <Menu.Item key=\"mail\">\r\n                <Icon type=\"mail\" />\r\n                All\r\n            </Menu.Item> */}\r\n                {/* <Menu.Item key=\"app\" disabled>\r\n                <Icon type=\"appstore\" />\r\n                Navigation Two\r\n            </Menu.Item> */}\r\n\r\n                {/* <Menu.Item key=\"alipay\">\r\n                <a href=\"https://ant.design\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    Navigation Four - Link\r\n                </a>\r\n            </Menu.Item> */}\r\n\r\n            </Menu>\r\n        </Header>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Skeleton, Card, Result, Button } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nexport default function PokemonList({pokemon, caughtPokemon}) {\r\n    console.log(pokemon)\r\n    let imgPath = 'https://raw.githubusercontent.com/PokeApi/sprites/master/sprites/pokemon/'\r\nconst loading = false\r\n    return (\r\n        // <div>{\r\n        pokemon ?\r\n            pokemon.map(p => {\r\n                let urlx = p.url.split('/')\r\n\r\n                if (loading) {\r\n                    return (\r\n                        <Skeleton loading={loading} avatar={'circle'} paragraph={true} />\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <Link key={p.name} to={`/reactpokedex/wild-pokemon-detail/${urlx[6]}`}>\r\n                            <Card\r\n\r\n                                hoverable\r\n                                style={{ width: 240 }}\r\n                                cover={<img alt=\"example\" src={imgPath + urlx[6] + '.png'} />}\r\n                            >\r\n                                <Meta title={p.name} description={''} />\r\n                            </Card>\r\n                        </Link>\r\n                    )\r\n                }\r\n            }) : (\r\n                <Result\r\n                    status=\"warning\"\r\n                    title=\"You don't have any pokemon\"\r\n                    extra={\r\n                        <Link to=\"/rtp/wild-pokemon-list\">\r\n                            <Button type=\"primary\" key=\"console\">\r\n                                find pokemon\r\n                            </Button>\r\n                        </Link>\r\n                    }\r\n                />)\r\n        // }</div>\r\n\r\n        // <Card\r\n        //     hoverable\r\n        //     style={{ width: 240 }}\r\n        //     cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n        // >\r\n        //     <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n        // </Card> \r\n\r\n        // <div>{\r\n        //     pokemon.map(p => {\r\n        //         let urlx = p.url.split('/')\r\n\r\n        //         return (\r\n        //             <Link to={`/wild-pokemon-detail/${urlx[6]}`}>\r\n        //                 <div key={p.id}>\r\n        //                     <img src={imgPath + urlx[6] + '.png'} /><br />\r\n        //                     {p.name}\r\n        //                 </div>\r\n        //             </Link>\r\n        //         )\r\n        //     })\r\n        // }</div >\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport default function Pagination({ goToNextPage, goToPrevPage }) {\r\n    return (\r\n        <div>\r\n            {\r\n                goToPrevPage && <Button type=\"primary\" onClick={goToPrevPage}>Prev</Button>\r\n            }\r\n            &nbsp;\r\n            {\r\n                goToNextPage && <Button type=\"primary\" onClick={goToNextPage}>Next</Button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\n\r\nexport function useLocalState(localItem) {\r\n    const [loc, setState] = useState(localStorage.getItem(localItem))\r\n\r\n    function setLoc(newItem) {\r\n        localStorage.setItem(localItem, newItem)\r\n        setState(newItem)\r\n    }\r\n\r\n    return [loc, setLoc]\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport PokemonList from '../components/PokemonList'\r\nimport axios from 'axios'\r\nimport Pagination from '../components/Pagination'\r\nimport { BackTop, Skeleton, Switch, List, Avatar, Icon, Row, Col, Slider } from 'antd'\r\nimport { useLocalState } from '../useLocalState'\r\n\r\n// import { useLocalState } from '../useLocalState'\r\n// export const WplContext = React.createContext()\r\n\r\nconst urlx = 'https://pokeapi.co/api/v2/pokemon'\r\n\r\nfunction MyPokemonList() {\r\n  const [caughtPokemon, setCaughtPokemon] = useLocalState('caughtPokemon')\r\n\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(urlx)\r\n  const [nextPageUrl, setNextPageUrl] = useState()\r\n  const [prevPageUrl, setPrevPageUrl] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  console.log(pokemon)\r\n  // const [pokemon, setPokemon] = useState(['bulbasaur', 'charmender'])\r\n  console.log(pokemon);\r\n  useEffect(() => {\r\n    setPokemon(JSON.parse(caughtPokemon))\r\n    setLoading(true)\r\n   \r\n  }, [])\r\n\r\n  return (\r\n    // <WplContext>\r\n\r\n    <div className=\"app-wrapper\" >\r\n      <header>\r\n        <h1 className=\"title\">Pokemon List</h1>\r\n      </header>\r\n\r\n      <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n        {/* <Pagination\r\n          goToNextPage={nextPageUrl ? goToNextPage : null}\r\n          goToPrevPage={prevPageUrl ? goToPrevPage : null}\r\n        /> */}\r\n      </Row><br />\r\n      {\r\n        // loading ? (\r\n        //   <Skeleton loading={loading} avatar={'circle'} paragraph={false} />\r\n        // ) : (\r\n        <Row className='koontol'type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n          {\r\n            <PokemonList\r\n              loading={loading}\r\n              pokemon={pokemon}\r\n            />\r\n          }\r\n        </Row>\r\n        // )\r\n      }\r\n      <br />\r\n      <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n        {/* <Pagination\r\n          goToNextPage={nextPageUrl ? goToNextPage : null}\r\n          goToPrevPage={prevPageUrl ? goToPrevPage : null}\r\n        /> */}\r\n      </Row>\r\n\r\n      <div>\r\n        <BackTop />\r\n      </div>\r\n\r\n    </div>\r\n    // </WplContext>\r\n  );\r\n}\r\n\r\nexport default MyPokemonList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PokemonList from '../components/PokemonList'\r\nimport axios from 'axios'\r\nimport Pagination from '../components/Pagination'\r\nimport { BackTop, Skeleton, Switch, List, Avatar, Icon, Row, Col, Slider } from 'antd'\r\n\r\n import { useLocalState } from '../useLocalState'\r\n// export const WplContext = React.createContext()\r\n\r\nconst urlx = 'https://pokeapi.co/api/v2/pokemon'\r\n\r\nfunction WildPokemonList() {\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(urlx)\r\n  const [nextPageUrl, setNextPageUrl] = useState()\r\n  const [prevPageUrl, setPrevPageUrl] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  // const [pokemon, setPokemon] = useState(['bulbasaur', 'charmender'])\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    axios.get(urlx)\r\n\r\n    let cancel\r\n    axios.get(currentPageUrl, {\r\n      cancelToken: new axios.CancelToken(c => cancel = c)\r\n    })\r\n      .then(res => {\r\n        // console.log(res);\r\n        setLoading(false)\r\n        setNextPageUrl(res.data.next)\r\n        setPrevPageUrl(res.data.previous)\r\n        setPokemon(res.data.results.map(p => p))\r\n        // setPokemon(res.data.results.map(p => p.name))\r\n      })\r\n    return () => cancel()\r\n  }, [currentPageUrl])\r\n\r\n  function goToNextPage() {\r\n    setCurrentPageUrl(nextPageUrl)\r\n  }\r\n\r\n  function goToPrevPage() {\r\n    setCurrentPageUrl(prevPageUrl)\r\n  }\r\n\r\n  // if (loading) return 'loading...'\r\n\r\n  //console.log(pokemon)\r\n  // console.log(pokemon[1].name)\r\n  return (\r\n    // <WplContext>\r\n\r\n      <div className=\"app-wrapper\" >\r\n        <header>\r\n          <h1 className=\"title\">My Pokemon List</h1>\r\n        </header>\r\n\r\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n          <Pagination\r\n            goToNextPage={nextPageUrl ? goToNextPage : null}\r\n            goToPrevPage={prevPageUrl ? goToPrevPage : null}\r\n          />\r\n        </Row><br />\r\n        {\r\n          // loading ? (\r\n          //   <Skeleton loading={loading} avatar={'circle'} paragraph={false} />\r\n          // ) : (\r\n          <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n            {\r\n              <PokemonList\r\n                loading={loading}\r\n                pokemon={pokemon}\r\n              />\r\n            }\r\n          </Row>\r\n          // )\r\n        }\r\n        <br />\r\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n          <Pagination\r\n            goToNextPage={nextPageUrl ? goToNextPage : null}\r\n            goToPrevPage={prevPageUrl ? goToPrevPage : null}\r\n          />\r\n        </Row>\r\n\r\n        <div>\r\n          <BackTop />\r\n        </div>\r\n\r\n      </div>\r\n    // </WplContext>\r\n  );\r\n}\r\n\r\nexport default WildPokemonList;\r\n","import React from 'react'\r\nimport { List, Typography } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PokemonMoves({ moves }) {\r\n    return (\r\n        <List\r\n            size=\"small\"\r\n            // header={<div>Header</div>}\r\n            // footer={<div>Footer</div>}\r\n            bordered\r\n            dataSource={moves}\r\n            renderItem={item => <List.Item>{item.move.name}</List.Item>}\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { List, Typography } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PokemonTypes({ types }) {\r\n    // console.log(types)\r\n    return (\r\n        // <div className=\"pokemon-type\">{\r\n        //     types.map(p => (\r\n        //         <div key={p.type.name}>\r\n        //             {p.type.name}\r\n        //         </div>\r\n        //     ))\r\n        // }</div >\r\n        <List\r\n            size=\"small\"\r\n            // header={<div>Header</div>}\r\n            // footer={<div>Footer</div>}\r\n            bordered\r\n            dataSource={types}\r\n            renderItem={item => <List.Item>{item.type.name}</List.Item>}\r\n        />\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PokemonList from '../components/PokemonList'\r\nimport axios from 'axios'\r\nimport Pagination from '../components/Pagination'\r\nimport PokemonMoves from '../components/PokemonMoves';\r\nimport PokemonTypes from '../components/PokemonTypes';\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\n// import { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Row, Col,\r\n  Card,\r\n  Descriptions,\r\n  Avatar,\r\n  Spin,\r\n  Carousel,\r\n  Alert,\r\n  Modal,\r\n  Tabs,\r\n  Button,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Checkbox\r\n} from 'antd'\r\n\r\nimport { useLocalState } from '../useLocalState'\r\n// export const WplContext = React.createContext()\r\n\r\nfunction WildPokemonDetail({ match }) {\r\n  const [pokemon, setPokemon] = useState([])\r\n  const [hasCaught, setHasCaught] = useState(false)\r\n  const [pokemonDex, setPokemonDex] = useState([])\r\n  const [pokemonTypes, setPokemonTypes] = useState([])\r\n  const [pokemonMoves, setPokemonMoves] = useState([])\r\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon/')\r\n  const [loading, setLoading] = useState(true)\r\n  const [loading2, setLoading2] = useState(false)\r\n  const [name, setName] = useState()\r\n  const [visible, setVisible] = useState(false)\r\n  const [confirmLoading, setConfirmLoading] = useState(false)\r\n\r\n  const [caughtPokemon, setCaughtPokemon] = useLocalState('caughtPokemon')\r\n  console.log('caughtPokemon', caughtPokemon)\r\n\r\n  useEffect(() => {\r\n    fetchItem()\r\n  }, [currentPageUrl])\r\n\r\n  const fetchItem = () => {\r\n    setLoading(true)\r\n    setLoading2(true)\r\n    let cancel\r\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${match.params.id}`, {\r\n      cancelToken: new axios.CancelToken(c => cancel = c)\r\n    })\r\n      .then(res => {\r\n        console.log(res);\r\n        setLoading(false)\r\n        setLoading2(false)\r\n        setPokemon(res.data)\r\n        setPokemon({name:res.data.name, url:`https://pokeapi.co/api/v2/pokemon/${match.params.id}/`}\r\n        )\r\n        setPokemonMoves(res.data.moves)\r\n        setPokemonTypes(res.data.types)\r\n      })\r\n    return () => cancel()\r\n  }\r\n\r\n  if (loading) return 'loading...'\r\n  let imgPath = 'https://raw.githubusercontent.com/PokeApi/sprites/master/sprites/pokemon/'\r\n\r\n  const catchPokemon = (pokemon) => {\r\n    setLoading2(true)\r\n\r\n    setTimeout(function () {\r\n      let prob = Math.random()\r\n      console.log('masuk itung')\r\n      if (prob < 0.5) {\r\n        setPokemonDex(state => {\r\n          console.log('before', state)\r\n          const monExists = (state.filter(p => pokemon.id == p.id).length > 0)\r\n\r\n          if (!monExists) {\r\n            state = [pokemon,...state]\r\n            state.sort(function (a, b) {\r\n              return a.id - b.id\r\n            })\r\n          }\r\n          console.log('after', state)\r\n          return state\r\n        })\r\n        successPokemonModal()\r\n      } else {\r\n        failedPokemonModal()\r\n        setLoading2(false)\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  const setPokemonName = () => {\r\n    let name = prompt('you got it ^_^, \\ngive your pokemon a name ', '')\r\n    if (name) setHasCaught(true)\r\n    console.log(name)\r\n  }\r\n\r\n  const successPokemonModal = () => {\r\n    setVisible(true)\r\n  };\r\n\r\n  const failedPokemonModal = () => {\r\n    Modal.error({\r\n      title: 'Failed ',\r\n      content: 'Sorry failed to catch pokemon, try again',\r\n    });\r\n  }\r\n\r\n  const handleOk = () => {\r\n    setConfirmLoading(true)\r\n\r\n    setTimeout(() => {\r\n      setName(pokemon.name)\r\n      let data = []\r\n      if(caughtPokemon){\r\n\r\n        if(JSON.parse(caughtPokemon)){\r\n          data=[pokemon,...JSON.parse(caughtPokemon)]\r\n        }\r\n      }else{\r\n        data=[pokemon]\r\n      }\r\n      setCaughtPokemon(JSON.stringify(data))\r\n      setLoading2(false)\r\n      setVisible(false)\r\n      setConfirmLoading(false)\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    console.log('Clicked cancel button');\r\n    setLoading2(false)\r\n    setVisible(false)\r\n  };\r\n\r\n  const { TabPane } = Tabs;\r\n\r\n  const renderTabBar = (props, DefaultTabBar) => (\r\n    <Sticky bottomOffset={80}>\r\n      {/* <> */}\r\n      {({ style }) => (\r\n        <DefaultTabBar {...props} style={{ ...style, zIndex: 1, background: '#fff' }} />\r\n      )}\r\n      {/* </> */}\r\n    </Sticky>\r\n  );\r\n\r\n  const { Meta } = Card;\r\n  // let history = useHistory();\r\n  let sp = pokemon.sprites\r\n\r\n  return (\r\n    // <WplContext.Provider value={[caughtPokemon, setCaughtPokemon]}>\r\n    <div className=\"app-wrapper\" >\r\n      <Spin\r\n        spinning={loading2}\r\n      // delay={500}\r\n      >\r\n        <header>\r\n          <h1 className=\"title\">Wild Pokemon Detail</h1>\r\n          {/* <p>{caughtPokemon}</p> */}\r\n          {/* <button onClick={() => history.goBack()}>Back</button> */}\r\n        </header>\r\n\r\n        <section>\r\n          {/* <section className=\"wild-pokemon\"> */}\r\n          <Row type=\"flex\" justify=\"space-around\" align=\"top\">\r\n\r\n            <Col xs={24} sm={4} md={6} lg={8} xl={4}>\r\n              <Carousel autoplay>\r\n                <div>\r\n                  <Card\r\n                    cover={\r\n                      <img\r\n                        alt=\"example\"\r\n                        src={imgPath + match.params.id + '.png'}></img>\r\n                    }\r\n                  >\r\n                    <Meta\r\n                      title=\"\"\r\n                      description=\"Front Side\"\r\n                    />\r\n                  </Card>\r\n                </div>\r\n\r\n                <div>\r\n                  <Card\r\n                    cover={\r\n                      <img\r\n                        alt=\"example\"\r\n                        src={imgPath + 'back/' + match.params.id + '.png'}></img>\r\n                    }\r\n                  >\r\n                    <Meta\r\n                      title=\"\"\r\n                      description=\"Back Side\"\r\n                    />\r\n                  </Card>\r\n                </div>\r\n              </Carousel>\r\n            </Col>\r\n\r\n            <Col style={{ flex: 1 / 2 }} xs={24} sm={4} md={12} lg={8} xl={10}>\r\n              <Descriptions title=\"Profile\">\r\n                <Descriptions.Item label=\"name\">{pokemon.name}</Descriptions.Item>\r\n                <Descriptions.Item label=\"height\">{pokemon.height}</Descriptions.Item>\r\n                <Descriptions.Item label=\"weigth\">{pokemon.weight}</Descriptions.Item>\r\n              </Descriptions>\r\n            </Col>\r\n\r\n            <Col style={{ flex: 1 / 2 }} xs={24} sm={16} md={6} lg={8} xl={10}>\r\n              {/* bla bla */}\r\n            </Col>\r\n          </Row>\r\n        </section>\r\n\r\n        <section>\r\n          <div>\r\n            {\r\n              !hasCaught && <Button type=\"primary\" onClick={() => catchPokemon(pokemon)}>\r\n                catch\r\n              </Button>\r\n            }\r\n            <Modal\r\n              title=\"Gotcha\"\r\n              visible={visible}\r\n              confirmLoading={confirmLoading}\r\n              onOk={() => handleOk()}\r\n              onCancel={() => handleCancel()}\r\n            >\r\n              <Alert message=\"Congratulation, you got a new pokemon\" type=\"success\" showIcon />\r\n              <br></br>\r\n\r\n              <label>rename (alias name)</label>\r\n              <Form onSubmit={() => alert('haha')} className=\"login-form\">\r\n                <Form.Item>\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"name\"\r\n                  />\r\n                </Form.Item>\r\n              </Form>\r\n            </Modal>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"detail-info\">\r\n          <StickyContainer>\r\n            <Tabs defaultActiveKey=\"1\" renderTabBar={renderTabBar}>\r\n              <TabPane tab=\"Moves\" key=\"1\" style={{ /* height: 200 */ }}>\r\n                <PokemonMoves moves={pokemonMoves} />\r\n              </TabPane>\r\n              <TabPane tab=\"Types\" key=\"2\">\r\n                <PokemonTypes types={pokemonTypes} />\r\n              </TabPane>\r\n            </Tabs>\r\n          </StickyContainer>\r\n        </section>\r\n      </Spin>\r\n    </div>\r\n    // </WplContext.Provider>\r\n  );\r\n}\r\n\r\nexport default WildPokemonDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Nav from './Nav'\r\nimport MyPokemonList from './pages/MyPokemonList'\r\nimport WildPokemonList from './pages/WildPokemonList'\r\nimport WildPokemonDetail from './pages/WildPokemonDetail'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport './index.css'\r\n\r\nimport { Layout, Breadcrumb } from 'antd';\r\nconst { Content, Footer } = Layout;\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n\r\n        {/* <div className=\"app\"> */}\r\n        <Nav />\r\n\r\n        <Content style={{ padding: '0 50px', marginTop: 64 }}>\r\n          {/* <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>List</Breadcrumb.Item>\r\n            <Breadcrumb.Item>App</Breadcrumb.Item>\r\n          </Breadcrumb> */}\r\n\r\n          <div style={{ background: '#fff', padding: 24, minHeight: 380 }}>\r\n            <Switch>\r\n              {/* <Route exact path=\"/\" component={Home} /> */}\r\n              <Route exact path=\"/reactpokedex\" component={WildPokemonList} />\r\n              <Route path=\"/reactpokedex/my-pokemon-list\" component={MyPokemonList} />\r\n              <Route path=\"/reactpokedex/wild-pokemon-list\" component={WildPokemonList} />\r\n              <Route path=\"/reactpokedex/wild-pokemon-detail/:id\" component={WildPokemonDetail} />\r\n            </Switch>\r\n          </div>\r\n\r\n        </Content>\r\n\r\n        {/* </div> */}\r\n      </Layout>\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// import { useLocalState } from './useLocalState'\r\n// export const WplContext = React.createContext()\r\n\r\n// const []\r\nReactDOM.render(\r\n    // <WplContext.Provider value={[caughtPokemon, setCaughtPokemon]}>\r\n        <App />\r\n    // </WplContext.Provider>\r\n    ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\nserviceWorker.register();\r\n"],"sourceRoot":""}